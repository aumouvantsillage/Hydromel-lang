#lang hydromel

# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.

# ------------------------------------------------------------------------------
# Conditional expression: if
# ------------------------------------------------------------------------------

constant if1 = if 1 then 10 else 20
constant if2 = if 0 then 10 else 20
constant if3 = if 8 then 10 else 20

constant if4 = if 1 then 10
           elseif 1 then 20
           elseif 1 then 30
           else          40

constant if5 = if 0 then 10
           elseif 1 then 20
           elseif 1 then 30
           else          40

constant if6 = if 0 then 10
           elseif 0 then 20
           elseif 1 then 30
           else          40

constant if7 = if 0 then 10
           elseif 0 then 20
           elseif 0 then 30
           else          40

# ------------------------------------------------------------------------------
# Conditional expression: case
# ------------------------------------------------------------------------------

constant case1 = case 10 of
    10 => 1
    20 => 2
    30 => 3

constant case2 = case 20 of
    10 => 1
    20 => 2
    30 => 3

constant case3 = case 30 of
    10 => 1
    20 => 2
    30 => 3

constant case4 = case 40 of
    10 => 1
    20 => 2
    30 => 3
    _  => 4

constant case5 = case 15 of
    10, 15 => 1
    20, 25 => 2
    30, 35 => 3

constant case6 = case 25 of
    10, 15 => 1
    20, 25 => 2
    30, 35 => 3

constant case7 = case 35 of
    10, 15 => 1
    20, 25 => 2
    30, 35 => 3

constant case8 = case 40 of
    10, 15 => 1
    20, 25 => 2
    30, 35 => 3
    _      => 4

# ------------------------------------------------------------------------------
# Bitwise operation: not
# ------------------------------------------------------------------------------

constant not1  =  not  0
constant not2  =  not  1
constant not3  =  not  2
constant not4  =  not  3
constant not5  =  not  4
constant not6  =  not  5
constant not7  =  not -1
constant not8  =  not -2
constant not9  =  not -3
constant not10 =  not -4

# ------------------------------------------------------------------------------
# Bitwise operation: and
# ------------------------------------------------------------------------------

constant and1 =    0  and    0
constant and2 =    0  and    1
constant and3 =    1  and    0
constant and4 =    1  and    1
constant and5 = x'F0  and x'3C
constant and6 =   -1  and   12
constant and7 =  -24  and   12
constant and8 =  -24  and   -4

# ------------------------------------------------------------------------------
# Bitwise operation: or
# ------------------------------------------------------------------------------

constant or1 =    0 or    0
constant or2 =    0 or    1
constant or3 =    1 or    0
constant or4 =    1 or    1
constant or5 = x'F0 or x'3C
constant or6 =   -1 or   12
constant or7 =  -24 or   12
constant or8 =  -24 or   -4

# ------------------------------------------------------------------------------
# Bitwise operation: xor
# ------------------------------------------------------------------------------

constant xor1 =    0 xor    0
constant xor2 =    0 xor    1
constant xor3 =    1 xor    0
constant xor4 =    1 xor    1
constant xor5 = x'F0 xor x'3C
constant xor6 =   -1 xor   12
constant xor7 =  -24 xor   12
constant xor8 =  -24 xor   -4

# ------------------------------------------------------------------------------
# Integer function: unsigned_width
# ------------------------------------------------------------------------------

constant uw1  = unsigned_width(0)
constant uw2  = unsigned_width(1)
constant uw3  = unsigned_width(2)
constant uw4  = unsigned_width(3)
constant uw5  = unsigned_width(4)
constant uw6  = unsigned_width(128)
constant uw7  = unsigned_width(255)
constant uw8  = unsigned_width(256)
constant uw9  = unsigned_width(-1)
constant uw10 = unsigned_width(-2)
constant uw11 = unsigned_width(-3)
constant uw12 = unsigned_width(-4)
constant uw13 = unsigned_width(-5)
constant uw14 = unsigned_width(-127)
constant uw15 = unsigned_width(-128)
constant uw16 = unsigned_width(-129)

# ------------------------------------------------------------------------------
# Integer function: signed_width
# ------------------------------------------------------------------------------

constant sw1  = signed_width(0)
constant sw2  = signed_width(1)
constant sw3  = signed_width(2)
constant sw4  = signed_width(3)
constant sw5  = signed_width(4)
constant sw6  = signed_width(128)
constant sw7  = signed_width(255)
constant sw8  = signed_width(256)
constant sw9  = signed_width(-1)
constant sw10 = signed_width(-2)
constant sw11 = signed_width(-3)
constant sw12 = signed_width(-4)
constant sw13 = signed_width(-5)
constant sw14 = signed_width(-127)
constant sw15 = signed_width(-128)
constant sw16 = signed_width(-129)

# ------------------------------------------------------------------------------
# Comparison: ==
# ------------------------------------------------------------------------------

constant eq1 = 10 == 20
constant eq2 = 10 == 10
constant eq3 = ~X == 10
constant eq4 = ~X == ~Y
constant eq5 = ~X == ~X
constant eq6 = [1, 2] == 10
constant eq7 = [1, 2] == [3, 4]
constant eq8 = [1, 2] == [1, 2]

# ------------------------------------------------------------------------------
# Comparison: /=
# ------------------------------------------------------------------------------

constant ne1 = 10 /= 20
constant ne2 = 10 /= 10
constant ne3 = ~X /= 10
constant ne4 = ~X /= ~Y
constant ne5 = ~X /= ~X
constant ne6 = [1, 2] /= 10
constant ne7 = [1, 2] /= [3, 4]
constant ne8 = [1, 2] /= [1, 2]

# ------------------------------------------------------------------------------
# Comparison: >
# ------------------------------------------------------------------------------

constant gt1 = -5 > -5
constant gt2 = -5 > 10
constant gt3 = 10 > -5
constant gt4 = 10 > 10

# ------------------------------------------------------------------------------
# Comparison: <
# ------------------------------------------------------------------------------

constant lt1 = -5 < -5
constant lt2 = -5 < 10
constant lt3 = 10 < -5
constant lt4 = 10 < 10

# ------------------------------------------------------------------------------
# Comparison: >=
# ------------------------------------------------------------------------------

constant ge1 = -5 >= -5
constant ge2 = -5 >= 10
constant ge3 = 10 >= -5
constant ge4 = 10 >= 10

# ------------------------------------------------------------------------------
# Comparison: <=
# ------------------------------------------------------------------------------

constant le1 = -5 <= -5
constant le2 = -5 <= 10
constant le3 = 10 <= -5
constant le4 = 10 <= 10

# ------------------------------------------------------------------------------
# Arithmetic operation: +
# ------------------------------------------------------------------------------

constant add1 = 10 +  200
constant add2 = 10 + -200

# ------------------------------------------------------------------------------
# Arithmetic operation: binary -
# ------------------------------------------------------------------------------

constant sub1 = 10 -  200
constant sub2 = 10 - -200

# ------------------------------------------------------------------------------
# Arithmetic operation: *
# ------------------------------------------------------------------------------

constant mul1 = 10 *  200
constant mul2 = 10 * -200

# ------------------------------------------------------------------------------
# Arithmetic operation: /
# ------------------------------------------------------------------------------

constant div1 =  200 /  10
constant div2 = -200 /  10
constant div3 =  200 / -10
constant div4 =   10 / 200
constant div5 =   10 /-200
constant div6 =  -10 / 200
constant div7 =  -10 / 200

# ------------------------------------------------------------------------------
# Arithmetic operation: unary -
# ------------------------------------------------------------------------------

constant neg1 = -   0
constant neg2 = -  10
constant neg3 = - -10

# ------------------------------------------------------------------------------
# Shift operation: <<
# ------------------------------------------------------------------------------

constant shl1 =  11 <<  0
constant shl2 =  11 <<  4
constant shl3 =  11 << -2
constant shl4 = -11 <<  0
constant shl5 = -11 <<  4
constant shl6 = -11 << -2

# ------------------------------------------------------------------------------
# Shift operation: >>
# ------------------------------------------------------------------------------

constant shr1 =  177 >>  0
constant shr2 =  177 >>  4
constant shr3 =  177 >> -2
constant shr4 = -177 >>  0
constant shr5 = -177 >>  4
constant shr6 = -177 >> -2

# ------------------------------------------------------------------------------
# Bit slice: x{}
# ------------------------------------------------------------------------------

constant slice1 =   x'AB03 {11 .. 8}
constant slice2 =   x'AB03 {12 .. 8}
constant slice3 = (-x'AB03){11 .. 8}
constant slice4 = (-x'AB03){12 .. 8}

# ------------------------------------------------------------------------------
# Slice assignment: <- {}
# ------------------------------------------------------------------------------

constant sslice1 =   x'AB03  <- {11 .. 8 => 4}
constant sslice2 =   x'AB03  <- {11 .. 8 => x'FFF4}
constant sslice3 =   x'AB03  <- {11 .. 8 => -x'C}
constant sslice4 =   x'AB03  <- {11 .. 8 => 4, 3 .. 0 => 6}
constant sslice5 = (-x'AB03) <- {11 .. 8 => 3}
constant sslice6 = (-x'AB03) <- {11 .. 8 => x'FFF3}
constant sslice7 = (-x'AB03) <- {11 .. 8 => -x'D}

# ------------------------------------------------------------------------------
# Concatenation: {,}
# ------------------------------------------------------------------------------

constant cat1 = {}
constant cat2 = {x'A}
constant cat3 = {x'A, x'B, x'FC}
constant cat4 = {x'A, unsigned(8)|x'B|, x'FC}
constant cat5 = {signed(4)|x'A|, unsigned(8)|x'B|, x'FC}
constant cat6 = {x'A, signed(8)|x'B|, signed(8)|x'FC|}
constant cat7 = {signed(4)|x'A|, signed(8)|x'B|, signed(8)|x'FC|}

# ------------------------------------------------------------------------------
# Array: [,]
# ------------------------------------------------------------------------------

constant arr1 = []
constant arr2 = [10]
constant arr3 = [10, 20, 30]

# ------------------------------------------------------------------------------
# Array read: x[]
# ------------------------------------------------------------------------------

constant nth1 = [10, 20, 30][0]
constant nth2 = [10, 20, 30][1]
constant nth3 = [10, 20, 30][2]

constant nth4 = [[10, 20, 30],
                 [40, 50, 60],
                 [70, 80, 90]][1]
constant nth5 = [[10, 20, 30],
                 [40, 50, 60],
                 [70, 80, 90]][1, 2]

# ------------------------------------------------------------------------------
# Array assignment: <- [=>]
# ------------------------------------------------------------------------------

constant snth1 = [10, 20, 30] <- [0 => 55]
constant snth2 = [10, 20, 30] <- [1 => 55]
constant snth3 = [10, 20, 30] <- [2 => 55]
constant snth4 = [10, 20, 30] <- [0 => 55, 2 => 66]

constant snth5 = [[10, 20, 30],
                  [40, 50, 60],
                  [70, 80, 90]] <- [1 => [14, 15, 16]]
constant snth6 = [[10, 20, 30],
                  [40, 50, 60],
                  [70, 80, 90]] <- [1, 2 => 16, 2, 1 => 18]

# ------------------------------------------------------------------------------
# Record: (=>)
# ------------------------------------------------------------------------------

# TODO Empty record?
constant rec1 = (x => 12)
constant rec2 = (x => 12, y => 50)

# ------------------------------------------------------------------------------
# Record field read: .
# ------------------------------------------------------------------------------

constant field1 = (x => 10, y => 20).x
constant field2 = (x => 10, y => 20).y

# ------------------------------------------------------------------------------
# Record field assignment: <- (=>)
# ------------------------------------------------------------------------------

constant sfield1 = (x => 10, y => 20)          <- (x => 55)
constant sfield2 = (x => 10, y => 20)          <- (y => 55)
constant sfield3 = (x => 10, y => 20, z => 30) <- (x => 55, z => 66)

# ------------------------------------------------------------------------------
# Cast: ||
# ------------------------------------------------------------------------------

constant cast1  = unsigned(8)|36|
constant cast2  = unsigned(4)|36|
constant cast3  = unsigned(8)|-36|
constant cast4  = signed(8)|36|
constant cast5  = signed(3)|36|
constant cast6  = signed(8)|-36|
constant cast7  = integer|36|
constant cast8  = integer|-36|
constant cast9  = natural|36|
constant cast10 = natural|-36|
constant cast11 = any|~x|

# ------------------------------------------------------------------------------
# Range: ..
# ------------------------------------------------------------------------------

constant rng1 = 0 .. 3
constant rng2 = -3 .. 3
constant rng3 = 3 .. 0
constant rng4 = 3 .. -3
